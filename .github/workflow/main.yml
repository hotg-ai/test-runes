name: Continuous integration

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  check:
    name: Build all Runes
    runes-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Fetch Rune Repo's Toolchain File
        run: wget https://raw.githubusercontent.com/hotg-ai/rune/master/rust-toolchain.toml
      - name: Setup Rust
        run: |
          rustup show
          rustc --version --verbose
      - name: Install latest Rune binary
        run: |
          wget https://github.com/hotg-ai/rune/releases/download/nightly/rune.x86_64-unknown-linux-gnu.zip
          unzip rune.x86_64-unknown-linux-gnu.zip -d ${{ runner.temp }}
          chmod +x ${{ runner.temp }}/rune
          cp ${{ runner.temp }}/rune .
          ${{ runner.temp }}/rune version --verbose
      - name: Delete all previous runes
        run: find -name '*.rune' -delete
      - name: Build All Runes
        run: find -name 'Runefile' -exec ${{ runner.temp }}/rune build --debug '{}' ';'
      - name: Move all runes
        run: |
          mkdir -p runes
          find -name '*.rune' -exec mv -t runes/ '{}' '+'
      - name: Upload compiled runes as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: compiled-runes
          path: runes
